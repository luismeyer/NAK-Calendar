service: calendar-formatter
app: calendar-formatter

provider:
  name: aws
  runtime: nodejs12.x
  stage: dev
  region: eu-central-1
  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - s3:*
        - lambda:InvokeFunction
      Resource: "*"
  environment:
    BUCKET: ${self:custom.bucket}
    BOT_TOKEN: ${file(./secrets/secrets.json):token}
    CHAT_ID: ${file(./secrets/secrets.json):chatId}

layers:
  lib64-canvas:
    path: layers/lib64-canvas-layer
  node-canvas:
    path: layers/node-canvas-layer

custom:
  bucket: ${file(./secrets/secrets.json):bucket}
  s3:
    port: 8000
    directory: /tmp
  customDomain:
    domainName: ${file(./secrets/secrets.json):domain}
    createRoute53Record: true
    stage: ${self:provider.stage}
  webpack:
    webpackConfig: "./webpack.config.js"
    includeModules: true
    packager: "npm"

plugins:
  - serverless-s3-local
  - serverless-offline
  - serverless-domain-manager
  - serverless-webpack

package:
  exclude:
    - ./**
  include:
    - .webpack

functions:
  timetableApi:
    handler: handler.timetableFormatter
    events:
      - schedule: cron(0 */6 * * ? *)
  mensaApi:
    handler: handler.mensaFormatter
    events:
      - schedule: cron(0 0 * * ? *)
  bot:
    handler: handler.bot
    events:
      - http:
          path: bot
          method: ANY
          cors: true

resources:
  Resources:
    S3CalendarBucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: ${self:custom.bucket}
